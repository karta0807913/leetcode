package main

import (
	"fmt"
	"math"
	"testing"

	"github.com/stretchr/testify/require"
)

func getPrimes() []int {
	primes := []int{2}
	n := int(math.Sqrt(float64(1e6)))
	for i := 3; i <= n; i++ {
		isPrime := true
		n := int(math.Sqrt(float64(1e6)))
		for _, prime := range primes {
			if prime > n {
				break
			}
			if i%prime == 0 {
				isPrime = false
				break
			}
		}
		if isPrime {
			primes = append(primes, i)
		}
	}
	return primes
}

func appendPrimesMapCount(primes []int, m map[int]int, target int) {
	for _, prime := range primes {
		if prime > int(math.Sqrt(float64(target))) {
			break
		}
		for target%prime == 0 {
			m[target]++
			target /= prime
		}
	}
	if target != 1 {
		m[target]++
	}
}

func findValidSplit(nums []int) int {
	leftMap, rightMap := make(map[int]int), make(map[int]int)
	primes := getPrimes()
	for _, num := range nums {
		appendPrimesMapCount(primes, rightMap, num)
	}
	for i := 0; i < len(nums)-1; i++ {
		tmpMap := make(map[int]int)
		appendPrimesMapCount(primes, tmpMap, nums[i])
		for prime, count := range tmpMap {
			rightMap[prime] -= count
			if rightMap[prime] == 0 {
				delete(leftMap, prime)
				delete(rightMap, prime)
			} else {
				leftMap[prime] += count
			}
		}
		// fmt.Printf("nums[i]: %v, leftMap: %v, rightMap: %v\n", nums[i], leftMap, rightMap)
		if len(leftMap) == 0 {
			return i
		}
	}
	return -1
}

func TestPr(t *testing.T) {
	assert := require.New(t)
	fmt.Println(len(getPrimes()))

	assert.Equal(
		10,
		findValidSplit([]int{
			773287, 595571, 362429, 453161, 457757, 122533, 576151, 68489, 892663, 270527, 773287, 728947, 457333, 863287, 613289, 842077, 552859, 261251, 322271, 733111, 284341, 594401, 262459, 320063, 280769, 14057, 147107, 672341, 132647, 522413, 406349, 848633, 115279, 936577, 993203, 862957, 945671, 761681, 406349, 52747, 100391, 718381, 419567, 933923, 137867, 931921, 343289, 796063, 688451, 766907, 74311, 131839, 814543, 205991, 308411, 818897, 886421, 975281, 287167, 16603, 373229, 304541, 138829, 457697, 178951, 741011, 467897, 562763, 189701, 829613, 725737, 722123, 176317, 667687, 26393, 248569, 348431, 410279, 193703, 133967, 862471, 764051, 235397, 570511, 29207, 886421, 398771, 385877, 647, 956723, 314357, 97373, 438301, 278549, 468011, 957161, 569417, 740951, 668747, 241249, 823843, 584663, 886969, 872999, 101411, 75869, 420331, 766369, 718321, 431099, 107599, 895457, 783329, 380929, 384691, 418351, 320609, 703721, 596179, 467671, 760079, 32327, 522703, 201119, 321709, 748331, 602137, 300277, 38903, 246317, 403817, 390721, 897443, 723829, 327059, 733559, 175493, 819787, 819167, 602081, 84463, 486061, 111847, 321709, 32833, 54001, 59747, 211229, 772573, 312401, 176051, 769019, 47963, 197383, 183067, 412903, 888869, 178903, 648889, 471607, 748823, 799481, 310091, 103703, 104651, 929207, 473287, 122219, 493123, 300889, 971513, 961319, 568999, 256369, 358573, 814699, 87037, 98639, 316033, 430907, 142421, 965117, 752747, 286619, 785641, 592531, 476599, 616501, 898133, 766501, 568999, 105239, 43151, 979987, 746723, 248639, 381011, 808867, 291103, 319037, 774703, 536791, 875503, 795793, 110501, 241061, 331511, 98639, 369247, 548227, 566719, 685753, 462887, 509699, 163223, 548677, 553277, 87103, 477019, 748039, 824501, 679793, 262349, 702413, 335879, 657089, 75017, 40933, 163309, 36541, 784183, 648763, 595451, 118399, 241061,
		}),
	)

	assert.Equal(
		18,
		findValidSplit([]int{
			557663, 280817, 472963, 156253, 273349, 884803, 756869, 763183, 557663, 964357, 821411, 887849, 891133, 453379, 464279, 574373, 852749, 15031, 156253, 360169, 526159, 410203, 6101, 954851, 860599, 802573, 971693, 279173, 134243, 187367, 896953, 665011, 277747, 439441, 225683, 555143, 496303, 290317, 652033, 713311, 230107, 770047, 308323, 319607, 772907, 627217, 119311, 922463, 119311, 641131, 922463, 404773, 728417, 948281, 612373, 857707, 990589, 12739, 9127, 857963, 53113, 956003, 363397, 768613, 47981, 466027, 981569, 41597, 87149, 55021, 600883, 111953, 119083, 471871, 125641, 922463, 562577, 269069, 806999, 981073, 857707, 831587, 149351, 996461, 432457, 10903, 921091, 119083, 72671, 843289, 567323, 317003, 802129, 612373,
		}),
	)

	assert.Equal(
		-1,
		findValidSplit([]int{4, 7, 15, 8, 3, 5}),
	)
	assert.Equal(
		2,
		findValidSplit([]int{4, 7, 8, 15, 3, 5}),
	)

}
